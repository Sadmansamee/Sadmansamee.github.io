<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dart on Thoughtful Texts</title>
    <link>https://sadmansamee.github.io/categories/dart/</link>
    <description>Recent content in Dart on Thoughtful Texts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 May 2021 19:33:35 -0800</lastBuildDate><atom:link href="https://sadmansamee.github.io/categories/dart/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Migrate to Flutter Null Safety</title>
      <link>https://sadmansamee.github.io/flutter_null_safety/</link>
      <pubDate>Mon, 31 May 2021 19:33:35 -0800</pubDate>
      
      <guid>https://sadmansamee.github.io/flutter_null_safety/</guid>
      <description>Null safety is the solution to the billion doller mistake and it&amp;rsquo;s available for Flutter as well, why live with billion doller mistake anymore!
As null safety is available with Flutter 2.0 It comes with pretty handy migration guide and can simply use the tool to migrate to null safety nicely.
But in reality it&amp;rsquo;s not that straight forward as it sounds for a medium to big projects, also there might be lots of third party dependencies and tool may produce lots of compile error (atleast it happened with me).</description>
    </item>
    
    <item>
      <title>Must have tools for a Flutter dev</title>
      <link>https://sadmansamee.github.io/tools_for_flutter_dev/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://sadmansamee.github.io/tools_for_flutter_dev/</guid>
      <description>I&amp;rsquo;m enlisting the most usefull and popular tools for development with Flutter. undoubtedly , these will boost your productivity by a 110% !
Codemagic CI/CD Codemagic CI/CD is an excellent service for CI/CD especially made for Flutter. And free tier is more than enough for small to medium level.
Dartpad Dartpad is an online editor for dart and Flutter, it&amp;rsquo;s really use to try out simple snippets or share snippets with others by any means.</description>
    </item>
    
    <item>
      <title>Flutter State Management Approach</title>
      <link>https://sadmansamee.github.io/flutter_state_management/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sadmansamee.github.io/flutter_state_management/</guid>
      <description>When it comes to choose any architecture, design pattern or this kind of similar kinds of things it always comes down to preference, choice, need and applicable scenario and most of the writings ends with up with a solution that is very confusing, and most of the cases pros and con, applicable scenario aren&amp;rsquo;t described. Here I&amp;rsquo;m trying to describe a bit according to my little research and knowledge.
List of state management approaches</description>
    </item>
    
    <item>
      <title>Freezed for Bloc, Riverpod or provider</title>
      <link>https://sadmansamee.github.io/freezed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sadmansamee.github.io/freezed/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
